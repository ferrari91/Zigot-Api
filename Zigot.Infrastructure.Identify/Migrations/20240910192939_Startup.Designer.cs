// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Zigot.Infrastructure.Identity.Context;

#nullable disable

namespace Zigot.Infrastructure.Identity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240910192939_Startup")]
    partial class Startup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Contact.ContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OriginCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OriginState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Address.AddressModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Model.PersonDocModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ElectoralTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IssuingBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("PersonDocuments");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Model.PersonModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FatherFullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HasChildren")
                        .HasColumnType("boolean");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MotherFullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.Federal.FederalDocumentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BucketReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("FederalRegistrationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FederalRegistrationId");

                    b.ToTable("FederalDocuments");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.Federal.FederalRegistrationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("boolean");

                    b.Property<long>("ProcessId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId")
                        .IsUnique();

                    b.ToTable("FederalRegistrations");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.ProcessModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Caliber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WeaponRegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WeaponRegistrationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WeaponType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Contact.ContactModel", b =>
                {
                    b.HasOne("Zigot.Core.Domain.Contract.Persons.Model.PersonModel", "Person")
                        .WithOne("Contact")
                        .HasForeignKey("Zigot.Core.Domain.Contract.Contact.ContactModel", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Address.AddressModel", b =>
                {
                    b.HasOne("Zigot.Core.Domain.Contract.Persons.Model.PersonModel", "Person")
                        .WithOne("Address")
                        .HasForeignKey("Zigot.Core.Domain.Contract.Persons.Address.AddressModel", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Model.PersonDocModel", b =>
                {
                    b.HasOne("Zigot.Core.Domain.Contract.Persons.Model.PersonModel", "Person")
                        .WithOne("Documents")
                        .HasForeignKey("Zigot.Core.Domain.Contract.Persons.Model.PersonDocModel", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.Federal.FederalDocumentModel", b =>
                {
                    b.HasOne("Zigot.Core.Domain.Contract.Persons.Process.Federal.FederalRegistrationModel", "FederalRegistration")
                        .WithMany("Documents")
                        .HasForeignKey("FederalRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FederalRegistration");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.Federal.FederalRegistrationModel", b =>
                {
                    b.HasOne("Zigot.Core.Domain.Contract.Persons.Process.ProcessModel", "Process")
                        .WithOne("FederalRegistration")
                        .HasForeignKey("Zigot.Core.Domain.Contract.Persons.Process.Federal.FederalRegistrationModel", "ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.ProcessModel", b =>
                {
                    b.HasOne("Zigot.Core.Domain.Contract.Persons.Model.PersonModel", "Person")
                        .WithMany("Processes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Model.PersonModel", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("Documents")
                        .IsRequired();

                    b.Navigation("Processes");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.Federal.FederalRegistrationModel", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Zigot.Core.Domain.Contract.Persons.Process.ProcessModel", b =>
                {
                    b.Navigation("FederalRegistration")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
